# ZSH
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="agnoster"

plugins=(
  git
  docker
  zsh-syntax-highlighting
  zsh-autosuggestions
)

# History command configuration, see https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/history.zsh
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_all_dups
setopt hist_find_no_dups
setopt hist_save_no_dups
setopt hist_beep
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it

source "$ZSH"/oh-my-zsh.sh

# AUTO UPDATES (Mac OS X, update brew if older than 2 days)
if [[ "$(uname)" == "Darwin" ]] && [[ "$(find ~/Library/Caches/Homebrew/descriptions.json -mtime +2 -print)" ]]; then
  echo "Check for brew updates..."
  brew update && brew upgrade && brew cask upgrade
  echo ""
  echo "brew updated! You can run a 'brew cleanup -s' to remove old versions of software."
fi

# MAVEN
# Get the Maven directory. E.g. /usr/local/Cellar/maven/3.6.3_1/libexec (Mac OS X, brew)
if [[ "$(uname)" == "Darwin" ]]; then
    M2_HOME=$(grep -oE "\/[^\"}]+\/mvn" "$(which mvn)" | sed 's#/bin/mvn##')
else
    M2_HOME=/usr/share/maven/
fi
export M2_HOME

PATH=$PATH:$M2_HOME/bin:/usr/local/bin
export PATH

# Get the artifactory user and password from your Maven settings.xml
export ARTIFACTORY_USER=${ARTIFACTORY_USER:-$(grep '<username' ~/.m2/settings.xml | cut -f2 -d">" | cut -f1 -d"<" | head -n1)}
export ARTIFACTORY_PASSWORD=${ARTIFACTORY_PASSWORD:-$(grep '<password' ~/.m2/settings.xml | cut -f2 -d">" | cut -f1 -d"<" | head -n1)}

# JAVA
function setjdk() {
   if [ $# -ne 0 ]; then
      removeFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
   if [ -n "${JAVA_HOME+x}" ]; then
      removeFromPath "$JAVA_HOME"
   fi
   if [[ "$(uname)" == "Darwin" ]]; then
      JAVA_HOME=$(/usr/libexec/java_home -v "$@")
   else
      JAVA_HOME="/usr/lib/jvm/java-"$@"-openjdk-amd64"
   fi
   export JAVA_HOME
   PATH=$JAVA_HOME/bin:$PATH
   export PATH
  fi
}

function removeFromPath() {
  PATH=$(echo "$PATH" | sed -E -e "s;:$1;;" -e "s;$1:?;;")
  export PATH
}

setjdk 11

# KEYS (Mac OS X, zsh)
# Bind key with "ctrl + u" to erase from the cursor position to the beginning of the line, see https://clementc.github.io/blog/2018/01/25/moving_cli/
if [[ "$(uname)" == "Darwin" ]]; then
  bindkey \^U backward-kill-line
fi

# ALIASES

# git aliases
alias g="git"
alias ga="git add"
alias gb="git branch"
alias gbd="git branch -d"
alias gc="git commit"
alias gcam="git commit -am"
alias gcmsg="git commit -m"
alias gco="git checkout"
alias gcm="git checkout master"
alias gcb="git checkout -b"
alias gcp="git cherry-pick"
alias gd="git diff"
alias gf="git fetch"
alias gfa="git fetch --all"
alias gl="git pull"
alias gm="git merge"
alias gmom="git merge origin/master"
alias gp="git push"
alias gpo="git push origin "
alias grb="git rebase"
alias grba="git rebase --abort"
alias grbi="git rebase -i"
alias grh="git reset HEAD"
alias grhh="git reset HEAD --hard"
alias gs="git status"
alias gsta="git stash"
alias gstp="git stash pop"
alias glr="git ls-remote | grep refs/heads/ | cut -c 53-"
alias gbdp="gbd \$(gb | percol)"
alias gasp="git add \$(git status -s | sed -E 's/(^ M |^\?\? )//' | percol)"
alias gmop="git merge origin/\$(glr | percol)"
alias glrp="gco \$(glr | percol)"
alias gcop="gco \$(gs | grep modified | sed -e 's/modified://' | percol)"

# scripts aliases
alias sort-json="bash ~/sort-json.sh"
alias find-my-commits="bash ~/find-my-commits.sh"
alias generate-password="bash ~/generate-password.sh"
alias create-note="bash ~/create-note.sh"
alias update-all-repos="bash ~/update-all-repos.sh"

# other aliases
eval "$(thefuck --alias fk)"
alias typora="open -a typora"

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ] && source /usr/share/doc/fzf/examples/key-bindings.zsh
